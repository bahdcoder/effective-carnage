name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: checkout repository
      uses: actions/checkout@v4

    - name: set up node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: install dependencies
      run: npm ci

    - name: create .env file
      run: |
        cat > .env << EOL
        NODE_ENV=development
        PORT=5173
        BASE=/
        ABORT_DELAY=10000
        DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres
        REDIS_URL=redis://localhost:6379
        APP_KEY=ci_test_key_12345678901234567890
        EOL

    - name: generate prisma client
      run: npm run prisma:generate

    - name: run lint check
      run: npm run checks:lint

    - name: run format check
      run: npm run checks:format

    - name: seed events
      run: npm run cli seed_events

    - name: run tests with coverage
      run: npm run test:coverage

    - name: build application
      run: |
        npm run clean:build
        npm run build:core
        npm run build:client
        npm run build:server
        npm run cli fix_typescript_imports